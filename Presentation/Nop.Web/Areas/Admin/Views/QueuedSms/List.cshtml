@model Nop.Web.Areas.Admin.Models.Sms.QueuedSmsListModel
@inherits Nop.Web.Framework.Mvc.Razor.NopRazorPage<TModel>
@using Nop.Web.Framework.UI
@using Nop.Core.Infrastructure
@using Nop.Web.Areas.Admin.Models.Sms

@{
    var defaultGridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;

    //page title
    ViewBag.Title = T("Admin.System.QueuedSms").Text;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Queued sms");
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="content-header clearfix">
        <h1 class="pull-left">
            @T("Admin.System.QueuedSms")
        </h1>
        <div class="pull-right">
            <button type="button" id="delete-selected" class="btn bg-red">
                <i class="fa fa-trash-o"></i>
                @T("Admin.System.QueuedSms.DeleteSelected")
            </button>
            <button type="submit" id="delete-all" name="delete-all" class="btn bg-red">
                <i class="fa fa-trash-o"></i>
                @T("Admin.System.QueuedSms.DeleteAll")
            </button>
            <nop-delete-confirmation asp-button-id="delete-all" />
        </div>
    </div>

    <div class="content">
        <div class="form-horizontal">
            <div class="panel-group">
                <div class="panel panel-default panel-search">
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="SearchStartDate" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-editor asp-for="SearchStartDate" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="SearchEndDate" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-editor asp-for="SearchEndDate" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="SearchMaxSentTries" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-editor asp-for="SearchMaxSentTries" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="GoDirectlyToNumber" />
                                    </div>
                                    <div class="col-md-8">
                                        <div class="input-group input-group-short">
                                                <nop-editor asp-for="GoDirectlyToNumber" />
                                            <span class="input-group-btn">
                                                <button type="submit" id="go-to-sms-by-number" name="go-to-sms-by-number" class="btn btn-info btn-flat">
                                                    @T("Admin.Common.Go")
                                                </button>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-8 col-md-offset-4">
                                        <button type="button" id="search-queuedsms" class="btn btn-primary btn-search">
                                            <i class="fa fa-search"></i>
                                            @T("Admin.Common.Search")
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="panel panel-default">
                    <div class="panel-body">
                        @await Html.PartialAsync("Table", new DataTablesModel
                                                {
                                                    Name = "queuedSms-grid",
                                                    UrlRead = new DataUrl("QueuedSmsList", "QueuedSms", null),
                                                    SearchButtonId = "search-queuedsms",
                                                    Length = Model.PageSize,
                                                    LengthMenu = Model.AvailablePageSizes,
                                                    Filters = new List<FilterParameter>
                                                    {
                                                        new FilterParameter(nameof(Model.SearchStartDate), typeof(DateTime?)),
                                                        new FilterParameter(nameof(Model.SearchEndDate), typeof(DateTime?)),
                                                        new FilterParameter(nameof(Model.SearchMaxSentTries))
                                                    },
                                                    ColumnCollection = new List<ColumnProperty>
                                                    {
                                                        new ColumnProperty(nameof(QueuedSmsModel.Id))
                                                        {
                                                            IsMasterCheckBox = true,
                                                            Render = new RenderCheckBox("checkbox_queuedsms"),
                                                            ClassName =  NopColumnClassDefaults.CenterAll,
                                                            Width = "50"
                                                        },
                                                        new ColumnProperty(nameof(QueuedSmsModel.Id))
                                                        {
                                                            Title = T("Admin.System.QueuedSms.Fields.Id").Text,
                                                            Width = "50",
                                                        },
                                                        new ColumnProperty(nameof(QueuedSmsModel.Message))
                                                        {
                                                            Title = T("Admin.System.QueuedSms.Fields.Message").Text
                                                        },
                                                        new ColumnProperty(nameof(QueuedSmsModel.CreatedOn))
                                                        {
                                                            Title = T("Admin.System.QueuedSms.Fields.CreatedOn").Text,
                                                            Width = "150",
                                                            Render = new RenderDate()
                                                        },
                                                        new ColumnProperty(nameof(QueuedSmsModel.SentTries))
                                                        {
                                                            Title = T("Admin.System.QueuedSms.Fields.SentTries").Text,
                                                        },
                                                        new ColumnProperty(nameof(QueuedSmsModel.SentOn))
                                                        {
                                                            Title = T("Admin.System.QueuedEmails.Fields.SentOn").Text,
                                                            Width = "150",
                                                            Render = new RenderDate()
                                                        },
                                                         new ColumnProperty(nameof(QueuedSmsModel.PriorityName))
                                                        {
                                                            Title = T("Admin.System.QueuedSms.Fields.Priority").Text,
                                                        },
                                                        new ColumnProperty(nameof(QueuedSmsModel.Id))
                                                        {
                                                            Title = T("Admin.Common.Edit").Text,
                                                            Width = "50",
                                                            ClassName =  NopColumnClassDefaults.Button,
                                                            Render = new RenderButtonEdit(new DataUrl("Edit"))
                                                        }
                                                    }
                                                })

                        <script type="text/javascript">
                            var selectedIds = [];

                            $(document).ready(function() {
                                //search button
                                $('#search-queuedsms').click(function() {
                                    //search
                                    var grid = $('#queuedSms-grid').data('kendoGrid');
                                    grid.dataSource.page(1); //new search. Set page size to 1
                                    //grid.dataSource.read(); we already loaded the grid above using "page" function
                                    //clear selected checkboxes
                                    $('.checkboxGroups').attr('checked', false).change();
                                    selectedIds = [];
                                    return false;
                                });

                                $("#@Html.IdFor(model => model.GoDirectlyToNumber)").keydown(function (event) {
                                    if (event.keyCode === 13) {
                                        $("#go-to-sms-by-number").click();
                                        return false;
                                    }
                                });

                                //"delete selected" button
                                $('#delete-selected').click(function(e) {
                                    e.preventDefault();

                                    var postData = {
                                        selectedIds: selectedIds
                                    };
                                    addAntiForgeryToken(postData);

                                    $.ajax({
                                        cache: false,
                                        type: "POST",
                                        url: "@(Url.Action("DeleteSelected", "QueuedSms"))",
                                        data: postData,
                                        complete: function(data) {
                                            //reload grid
                                            var grid = $('#queuedSms-grid').data('kendoGrid');
                                            grid.dataSource.page(1); //new search. Set page size to 1
                                            //grid.dataSource.read(); we already loaded the grid above using "page" function
                                            //clear selected checkboxes
                                            $('.checkboxGroups').attr('checked', false).change();
                                            selectedIds = [];
                                        },
                                        error: function(xhr, ajaxOptions, thrownError) {
                                            alert(thrownError);
                                        },
                                        traditional: true
                                    });
                                    return false;
                                });

                                $('#mastercheckbox').click(function() {
                                    $('.checkboxGroups').attr('checked', $(this).is(':checked')).change();
                                });

                                //wire up checkboxes.
                                $('#queuedSms-grid').on('change', 'input[type=checkbox][id!=mastercheckbox]', function(e) {
                                    var $check = $(this);
                                    if ($check.is(":checked") == true) {
                                        var checked = jQuery.inArray($check.val(), selectedIds);
                                        if (checked == -1) {
                                            //add id to selectedIds.
                                            selectedIds.push($check.val());
                                        }
                                    } else {
                                        var checked = jQuery.inArray($check.val(), selectedIds);
                                        if (checked > -1) {
                                            //remove id from selectedIds.
                                            selectedIds = $.grep(selectedIds, function(item, index) {
                                                return item != $check.val();
                                            });
                                        }
                                    }
                                    updateMasterCheckbox();
                                });
                            });

                            function additionalData() {
                                var data = {
                                    SearchStartDate: $('#@Html.IdFor(model => model.SearchStartDate)').val(),
                                    SearchEndDate: $('#@Html.IdFor(model => model.SearchEndDate)').val(),
                                    SearchMaxSentTries: $('#@Html.IdFor(model => model.SearchMaxSentTries)').val()
                                };
                                addAntiForgeryToken(data);
                                return data;
                            }

                            function onDataBound(e) {

                                $('#queuedSms-grid input[type=checkbox][id!=mastercheckbox]').each(function() {
                                    var currentId = $(this).val();
                                    var checked = jQuery.inArray(currentId, selectedIds);
                                    //set checked based on if current checkbox's value is in selectedIds.
                                    $(this).attr('checked', checked > -1);
                                });

                                updateMasterCheckbox();
                            }

                            function updateMasterCheckbox() {
                                var numChkBoxes = $('#queuedSms-grid input[type=checkbox][id!=mastercheckbox]').length;
                                var numChkBoxesChecked = $('#queuedSms-grid input[type=checkbox][id!=mastercheckbox]:checked').length;
                                $('#mastercheckbox').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
                            }
                        </script>
                    </div>
                </div>
            </div>
        </div>
    </div>
}