@model OrderSearchModel

@using Nop.Core.Domain.Common

@using Nop.Services.Stores


<div class="content">
    <div class="form-horizontal">
        <div class="panel-group">
            @await Html.PartialAsync("Table", new DataTablesModel
       {
           Name = "deleted-grid",
           UrlRead = new DataUrl("DeletedOrderList", "order", null),
           Length = Model.PageSize,
           LengthMenu = Model.AvailablePageSizes,
           ColumnCollection = new List<ColumnProperty>
                      {

                          new ColumnProperty(nameof(OrderModel.CustomOrderNumber))
                                {
                                    Title = T("Admin.Orders.Fields.CustomOrderNumber").Text,
                                    Width = "80"
                                },
                          new ColumnProperty(nameof(OrderModel.OrderStatus))
                            {
                                Title = T("Admin.Orders.Fields.OrderStatus").Text,
                                Width = "100",
                                Render = new RenderCustom("renderColumnOrderStatus")
                            },
                          new ColumnProperty(nameof(OrderModel.PaymentStatus))
                            {
                                Title = T("Admin.Orders.Fields.PaymentStatus").Text,
                                Width = "150"
                            },
                          new ColumnProperty(nameof(OrderModel.CustomerEmail))
                            {
                                Title = T("Admin.Orders.Fields.Customer").Text,
                                Visible = false,
                                Render = new RenderLink(new DataUrl("~/Admin/Customer/Edit", nameof(OrderModel.CustomerId)))
                            },
                          new ColumnProperty(nameof(OrderModel.CreatedOn))
                            {
                                Title = T("Admin.Orders.Fields.CreatedOn").Text,
                                Width = "120",
                                Visible = false,
                                Render = new RenderDate()
                            },
                          new ColumnProperty(nameof(OrderModel.OrderTotal))
                            {
                                Title = T("Admin.Orders.Fields.OrderTotal").Text,
                                Width = "100",
                            }

                      }
       })
            <script>
                            function renderColumnOrderStatus(data, type, row, meta) {
                                var color;
                                switch (row.OrderStatusId) {
                                case 10:
                                    color = 'yellow';
                                    break;
                                case 20:
                                    color = 'blue';
                                    break;
                                case 30:
                                    color = 'green';
                                    break;
                                case 40:
                                    color = 'red';
                                    break;
                                }
                                return '<span class="grid-report-item ' + color + '">' + data + '</span >';
                            }

                            $(document).ready(function() {
                                $("#@Html.IdFor(model => model.GoDirectlyToCustomOrderNumber)").keydown(
                                    function(event) {
                                        if (event.keyCode === 13) {
                                            $("#go-to-order-by-number").click();
                                            return false;
                                        }
                                    });
                            });
                    
            </script>
        </div>
    </div>
</div>
