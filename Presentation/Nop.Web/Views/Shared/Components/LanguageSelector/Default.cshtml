@model LanguageSelectorModel

@inject Nop.Core.IWebHelper webHelper



@if (Model.AvailableLanguages.Count > 1)
{
    <div class="language-selector">
        @{
            var returnUrl = webHelper.GetRawUrl(Context.Request);

            if (Model.UseImages)
            {
                <ul class="language-list">
                    @foreach (var lang in Model.AvailableLanguages)
                    {
                        if (lang.Id != Model.CurrentLanguageId)
                        {
                            <li>
                                <a href="@Url.RouteUrl("ChangeLanguage", new { langid = lang.Id, returnUrl }, webHelper.CurrentRequestProtocol)" title="@lang.Name">
                                    @*<img title='@lang.Name' alt='@lang.Name' @(lang.Id == Model.CurrentLanguageId ? " class=selected" : null)
                                        src="@Url.Content("~/images/flags/" + @lang.FlagImageFileName) "/>*@
                                    <span @(lang.Id == Model.CurrentLanguageId ? " class=selected" : null) style="font-size: 16px;" id="@lang.Name.ToLower()"> @lang.Name </span>
                                </a>
                            </li>
                        }
                    }
                </ul>
            }
            else
            {
                @*var workingLanguage = EngineContext.Current.Resolve<IWorkContext>().WorkingLanguage;
                    var lang = Model.AvailableLanguages.FirstOrDefault(l => l.Id != workingLanguage.Id);
                        <a class="@lang.Name" href="@webHelper.ModifyQueryString(Url.RouteUrl("ChangeLanguage", new { langid = lang.Id }), "returnurl=" + HttpUtility.UrlEncode(HttpContext.Current.Request.RawUrl), null)" title="@lang.Name">
                            <span @(lang.Id == Model.CurrentLanguageId ? " class=selected" : null)>@lang.Name</span>
                        </a>*@
                var languages = Model.AvailableLanguages.Select(lang => new SelectListItem
                {
                    Text = lang.Name,
                    Value = Url.RouteUrl("ChangeLanguage", new { langid = lang.Id, returnUrl }, webHelper.CurrentRequestProtocol),
                    Selected = lang.Id.Equals(Model.CurrentLanguageId)
                });

                <select id="customerlanguage" name="customerlanguage" asp-items="@languages" onchange="setLocation(this.value);" aria-label="@T("Languages.Selector.Label")"></select>
            }
        }
    </div>
}