@model AddressModel



@if (Model.CountryEnabled && Model.StateProvinceEnabled)
{
    <script type="text/javascript">
        $(document).ready(function () {
            var ddlAreas = $("#@Html.IdFor(model => model.Area)");
            ddlAreas.change();
            $("#@Html.IdFor(model => model.StateProvinceId)").change(function () {
                var selectedItem = $(this).val();
                var statesProgress = $("#states-loading-progress");
                statesProgress.show();
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.Action("GetAreasByStateId", "Country"))",
                    data: { "stateId": selectedItem },
                    success: function (data) {
                        //ddlCities.html('');
                        ddlAreas.html('');
                        $.each(data,
                            function (id, option) {
                                ddlAreas.append($('<option></option>').val(option.id).html(option.name));
                            });
                        statesProgress.hide();
                        //ddlCities.trigger('change');
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve states.');
                        statesProgress.hide();
                    }
                });
            });
        });
    </script>
}

<input asp-for="Id" type="hidden"/>
<div class="edit-address">
    <div class="inputs">
        <label asp-for="FirstName" asp-postfix=":"></label>
        <input asp-for="FirstName" />
        <nop-required />
        <span asp-validation-for="FirstName"></span>
    </div>
    <div class="inputs">
        <label asp-for="LastName" asp-postfix=":"></label>
        <input asp-for="LastName" />
        <nop-required />
        <span asp-validation-for="LastName"></span>
    </div>
    <div class="inputs">
        <label asp-for="Email" asp-postfix=":"></label>
        <input asp-for="Email" />
        <nop-required />
        <span asp-validation-for="Email"></span>
    </div>
    @if (Model.CompanyEnabled)
    {
        <div class="inputs">
            <label asp-for="Company" asp-postfix=":"></label>
            <input asp-for="Company" />
            @if (Model.CompanyRequired)
            {
                <nop-required />
            }
            <span asp-validation-for="Company"></span>
        </div>
    }
    @if (Model.CountryEnabled)
    {
        @Html.HiddenFor(model => model.CountryId)

        @*<div class="inputs">
                <label asp-for="CountryId" asp-postfix=":"></label>
                <select asp-for="CountryId" asp-items="Model.AvailableCountries"
                        data-trigger="country-select"
                        data-url="@(Url.RouteUrl("GetStatesByCountryId"))"
                        data-stateprovince="#@Html.IdFor(model => model.StateProvinceId)"
                        data-loading="#states-loading-progress"></select>
                <nop-required />
                <span asp-validation-for="CountryId"></span>
            </div>*@
    }

    @if (Model.CountryEnabled && Model.StateProvinceEnabled)
    {
        <div class="inputs">
            <label asp-for="StateProvinceId" asp-postfix=":"></label>
            <select asp-for="StateProvinceId" asp-items="Model.AvailableStates"></select>
            <span id="states-loading-progress" style="display: none;" class="please-wait">@T("Common.Wait...")</span>
            <span asp-validation-for="StateProvinceId"></span>
        </div>
    }
    @if (Model.CountyEnabled)
    {
        @Html.HiddenFor(model => model.CountryId)
        @*<div class="inputs">
                <label asp-for="County" asp-postfix=":"></label>
                <input asp-for="County" />
                @if (Model.CountyRequired)
                {
                    <nop-required />
                }
                <span asp-validation-for="County"></span>
            </div>*@
    }
    @if (Model.CityEnabled)
    {
        @*<div class="inputs">
                <label asp-for="City" asp-postfix=":"></label>
                <input asp-for="City" />
                @if (Model.CityRequired)
                {
                    <nop-required />
                }
                <span asp-validation-for="City"></span>
            </div>*@
        <div class="inputs">
            <label asp-for="Area" asp-postfix=":"></label>
                @Html.DropDownList("Area", Model.AvailableAreas)
                <nop-required />
                @Html.ValidationMessageFor(model => model.Area)

        </div>

    }
    @if (Model.StreetAddressEnabled)
    {
        <div class="inputs">
            <label asp-for="Address1" asp-postfix=":"></label>
            <input asp-for="Address1" />
            @if (Model.StreetAddressRequired)
            {
                <nop-required />
            }
            <span asp-validation-for="Address1"></span>
        </div>
    }
    @if (Model.StreetAddress2Enabled)
    {
        <div class="inputs">
            <label asp-for="Address2" asp-postfix=":"></label>
            <input asp-for="Address2" />
            @if (Model.StreetAddress2Required)
            {
                <nop-required />
            }
            <span asp-validation-for="Address2"></span>
        </div>
    }
    @if (Model.ZipPostalCodeEnabled)
    {
        <div class="inputs">
            <label asp-for="ZipPostalCode" asp-postfix=":"></label>
            <input asp-for="ZipPostalCode" />
            @if (Model.ZipPostalCodeRequired)
            {
                <nop-required />
            }
            <span asp-validation-for="ZipPostalCode"></span>
        </div>
    }
    @if (Model.PhoneEnabled)
    {
<div class="inputs">
    <label asp-for="PhoneNumber" asp-postfix=":"></label>
    <input asp-for="PhoneNumber" maxlength="10" max="10" id="phoneformat" onkeypress="validatephone(event)" />
    @if (Model.PhoneRequired)
    {
        <nop-required />
    }
    <span id="phoneformatValidation" style="display: none;">@T("account.fields.phone.notvalid").Text</span>
    <span asp-validation-for="PhoneNumber"></span>
</div>
    }
    @if (Model.FaxEnabled)
    {
        <div class="inputs">
            <label asp-for="FaxNumber" asp-postfix=":"></label>
            <input asp-for="FaxNumber" />
            @if (Model.FaxRequired)
            {
                <nop-required />
            }
            <span asp-validation-for="FaxNumber"></span>
        </div>
    }

    <div class="inputs">
        <label>
            <input asp-for="IsDefault" />
            <label asp-for="IsDefault"></label>
        </label>

      
     
    </div>



    @if (Model.CustomAddressAttributes.Count > 0)
    {
        @await Html.PartialAsync("_AddressAttributes", Model.CustomAddressAttributes)
    }
</div>
<script>
       function validatephone(evt) {
        var theEvent = evt || window.event;
        var phonenumber = document.getElementById('phoneformat').value;
        if (phonenumber != undefined && phonenumber != null && phonenumber.length >= 1) {
            const first2 = phonenumber.slice(0, 2);
            if (first2 !== '05') {
                // document.getElementById('phoneformatValidation').innerHTML = @T("account.fields.phone.notvalid").Text;
                document.getElementById('phoneformatValidation').style.display = 'block';
            } else {
                document.getElementById('phoneformatValidation').style.display = 'none';
            }
        }
        // Handle paste
        if (theEvent.type === 'paste') {
            key = event.clipboardData.getData('text/plain');
        } else {
            // Handle key press
            var key = theEvent.keyCode || theEvent.which;
            key = String.fromCharCode(key);
        }
        var regex = /[0-9]|\./;
        if (!regex.test(key)) {
            theEvent.returnValue = false;
            if (theEvent.preventDefault) theEvent.preventDefault();
        }
    }
</script>
