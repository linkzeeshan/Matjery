using Nop.Core;
using Nop.Core.Caching;
using Nop.Core.Domain.Catalog;
using Nop.Core.Domain.Common;
using Nop.Core.Domain.Customers;
using Nop.Core.Domain.Localization;
using Nop.Core.Domain.Media;
using Nop.Core.Domain.Shipping;
using Nop.Core.Domain.Tax;
using Nop.Core.Domain.Vendors;
using Nop.Core.Infrastructure;
using Nop.Plugin.Matjery.WebApi.Interface;
using Nop.Services.Authentication;
using Nop.Services.Authentication.External;
using Nop.Services.BlackPoints;
using Nop.Services.Caching;
using Nop.Services.Catalog;
using Nop.Services.Common;
using Nop.Services.Configuration;
using Nop.Services.Constants;
using Nop.Services.Customers;
using Nop.Services.Directory;
using Nop.Services.Events;
using Nop.Services.Helpers;
using Nop.Services.Localization;
using Nop.Services.Logging;
using Nop.Services.lookup;
using Nop.Services.Media;
using Nop.Services.Messages;
using Nop.Services.Orders;
using Nop.Services.Payments;
using Nop.Services.Plugins;
using Nop.Services.Security;
using Nop.Services.Seo;
using Nop.Services.Shipping;
using Nop.Services.Stores;
using Nop.Services.Tax;
using Nop.Services.Topics;
using Nop.Services.TradeLicense;
using Nop.Services.Vendors;
using Nop.Web.Factories;

namespace Nop.Plugin.Matjery.WebApi.Services
{
    public class BasePluginService
    {
        protected readonly IWebHelper _webHelper;
        protected readonly IPictureService _pictureService;
        protected readonly MediaSettings _mediaSettings;
        protected readonly CatalogSettings _catalogSettings;
        protected readonly ILocalizationService _localizationService;
        protected readonly IUrlRecordService _urlRecordService;
        protected readonly ILanguageService _languageService;
        protected readonly IProductService _productService;
        protected readonly IStaticCacheManager _staticCacheManager;
        protected readonly IStoreContext _storeContext;
        protected readonly ICustomerService _customerService;
        protected readonly IWorkContext _workContext;
        protected readonly ICategoryService _categoryService;
        protected readonly ICacheKeyService _cacheKeyService;
        protected readonly IAclService _aclService;
        protected readonly IStoreMappingService _storeMappingService;
        protected readonly IPermissionService _permissionService;
        protected readonly IPriceFormatter _priceFormatter;
        protected readonly ICurrencyService _currencyService;
        protected readonly ITaxService _taxService;
        protected readonly IPriceCalculationService _priceCalculationService;
        protected readonly IOrderReportService _orderReportService;
        protected readonly IProductModelFactory _productModelFactory;
        protected readonly IRecentlyViewedProductsService _recentlyViewedProductsService;
        protected readonly ICustomerActivityService _customerActivityService;
        protected readonly IOpenAuthenticationService _openAuthenticationService;
        protected readonly CustomerSettings _customerSettings;
        protected readonly IGenericAttributeService _genericAttributeService;
        protected readonly ICustomerRegistrationService _customerRegistrationService;
        protected readonly IShoppingCartService _shoppingCartService;
        protected readonly IConstantService _constantService;
        protected readonly IAuthenticationService _authenticationService;
        protected readonly IEventPublisher _eventPublisher;
        protected readonly IVendorService _vendorService;
        protected readonly IExternalAuthenticationService _externalAuthorizer;
        protected readonly ICountryService _countryService;
        protected readonly IWorkflowMessageService _workflowMessageService;
        protected readonly LocalizationSettings _localizationSettings;
        protected readonly IEncryptionService _encryptionService;
        protected readonly IAddressService _addressService;
        protected readonly IStateProvinceService _stateProvinceService;
        protected readonly IOrderService _orderService;
        protected readonly IBlackPointService _blackPointService;
        protected readonly IProductAttributeService _productAttributeService;
        protected readonly IProductAttributeParser _productAttributeParser;
        protected readonly IShippingService _shippingService;
        protected readonly ShippingSettings _shippingSettings;
        protected readonly IPaymentService _paymentService;
        protected readonly IOrderTotalCalculationService _orderTotalCalculationService;
        protected readonly IOrderProcessingService _orderProcessingService;
        protected readonly IDateTimeHelper _dateTimeHelper;
        protected readonly ISettingService _settingService;
        protected readonly IPluginService _pluginService;
        protected readonly AddressSettings _addressSettings;
        protected readonly IGiftCardService _giftCardService;
        protected readonly RewardPointsSettings _rewardPointsSettings;
        protected readonly TaxSettings _taxSettings;
        protected readonly ICampaignService _campaignService;
        protected readonly IDeviceInfoService _deviceInfoService;
        protected readonly IQueuedPushNotificationService _queuedPushNotificationService;
        protected readonly IVendorFollowerService _vendorFollowerService;
        protected readonly ITopicService _topicService;
        protected readonly VendorReviewSettings _vendorReviewSettings;
        protected readonly IShippingPluginManager _shippingPluginManager;
        protected readonly ILookupService _lookupService;
        protected readonly ITradelicenseService _tradeLicenseService;


        public BasePluginService()
        {
            _constantService= EngineContext.Current.Resolve<IConstantService>();
            _webHelper = EngineContext.Current.Resolve<IWebHelper>();
            _pictureService = EngineContext.Current.Resolve<IPictureService>();
            _mediaSettings = EngineContext.Current.Resolve<MediaSettings>();
            _localizationService = EngineContext.Current.Resolve<ILocalizationService>();
            _urlRecordService = EngineContext.Current.Resolve<IUrlRecordService>();
            _languageService = EngineContext.Current.Resolve<ILanguageService>();
            _catalogSettings = EngineContext.Current.Resolve<CatalogSettings>();
            _productService = EngineContext.Current.Resolve<IProductService>();
            _staticCacheManager = EngineContext.Current.Resolve<IStaticCacheManager>();
            _storeContext = EngineContext.Current.Resolve<IStoreContext>();
            _customerService = EngineContext.Current.Resolve<ICustomerService>();
            _workContext = EngineContext.Current.Resolve<IWorkContext>();
            _categoryService = EngineContext.Current.Resolve<ICategoryService>();
            _cacheKeyService = EngineContext.Current.Resolve<ICacheKeyService>();
            _aclService = EngineContext.Current.Resolve<IAclService>();
            _storeMappingService = EngineContext.Current.Resolve<IStoreMappingService>();
            _permissionService = EngineContext.Current.Resolve<IPermissionService>();
            _priceFormatter = EngineContext.Current.Resolve<IPriceFormatter>();
            _currencyService = EngineContext.Current.Resolve<ICurrencyService>();
            _taxService = EngineContext.Current.Resolve<ITaxService>();
            _priceCalculationService = EngineContext.Current.Resolve<IPriceCalculationService>();
            _orderReportService = EngineContext.Current.Resolve<IOrderReportService>();
            _productModelFactory = EngineContext.Current.Resolve<IProductModelFactory>();
            _recentlyViewedProductsService = EngineContext.Current.Resolve<IRecentlyViewedProductsService>();
            _customerActivityService = EngineContext.Current.Resolve<ICustomerActivityService>();
            _openAuthenticationService = EngineContext.Current.Resolve<IOpenAuthenticationService>();
            _customerSettings = EngineContext.Current.Resolve<CustomerSettings>();
            _genericAttributeService = EngineContext.Current.Resolve<IGenericAttributeService>();
            _customerRegistrationService= EngineContext.Current.Resolve<ICustomerRegistrationService>();
            _shoppingCartService= EngineContext.Current.Resolve<IShoppingCartService>();
            _authenticationService = EngineContext.Current.Resolve<IAuthenticationService>();
            _eventPublisher = EngineContext.Current.Resolve<IEventPublisher>();
            _vendorService = EngineContext.Current.Resolve<IVendorService>();
            _externalAuthorizer = EngineContext.Current.Resolve<IExternalAuthenticationService>();
            _countryService = EngineContext.Current.Resolve<ICountryService>();
            _workflowMessageService = EngineContext.Current.Resolve<IWorkflowMessageService>();
            _localizationSettings = EngineContext.Current.Resolve<LocalizationSettings>();
            _encryptionService = EngineContext.Current.Resolve<IEncryptionService>();
            _addressService = EngineContext.Current.Resolve<IAddressService>();
            _stateProvinceService = EngineContext.Current.Resolve<IStateProvinceService>();
            _orderService = EngineContext.Current.Resolve<IOrderService>();
            _blackPointService = EngineContext.Current.Resolve<IBlackPointService>();
            _productAttributeService = EngineContext.Current.Resolve<IProductAttributeService>();
            _productAttributeParser = EngineContext.Current.Resolve<IProductAttributeParser>();
            _shippingService= EngineContext.Current.Resolve<IShippingService>();
            _shippingSettings = EngineContext.Current.Resolve<ShippingSettings>();
            _paymentService= EngineContext.Current.Resolve<IPaymentService>();
            _orderTotalCalculationService = EngineContext.Current.Resolve<IOrderTotalCalculationService>();
            _orderProcessingService= EngineContext.Current.Resolve<IOrderProcessingService>();
            _dateTimeHelper = EngineContext.Current.Resolve<IDateTimeHelper>();
            _pluginService = EngineContext.Current.Resolve<IPluginService>();
            _settingService = EngineContext.Current.Resolve<ISettingService>();
            _addressSettings = EngineContext.Current.Resolve<AddressSettings>();
            _giftCardService = EngineContext.Current.Resolve<IGiftCardService>();
            _rewardPointsSettings = EngineContext.Current.Resolve<RewardPointsSettings>();
            _vendorFollowerService = EngineContext.Current.Resolve<IVendorFollowerService>();
            _taxSettings = EngineContext.Current.Resolve<TaxSettings>();
            _campaignService= EngineContext.Current.Resolve<ICampaignService>();
            _deviceInfoService= EngineContext.Current.Resolve<IDeviceInfoService>();
            _queuedPushNotificationService= EngineContext.Current.Resolve<IQueuedPushNotificationService>();
            _topicService = EngineContext.Current.Resolve<ITopicService>();
            _vendorReviewSettings = EngineContext.Current.Resolve<VendorReviewSettings>();
            _shippingPluginManager= EngineContext.Current.Resolve<IShippingPluginManager>();
            _lookupService = EngineContext.Current.Resolve<ILookupService>();
            _tradeLicenseService = EngineContext.Current.Resolve<ITradelicenseService>();
        }
    }
}
